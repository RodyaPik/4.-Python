# Д/З

# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств. | 11 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18
# 6 12

"""n, m = map(int, input().split())
a = set(map(int, input().split()))
b = set(map(int, input().split()))
print(*sorted(a & b))"""

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. Таким образом, у
# каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.

"""n = int(input('Ведите количество кустов:'))
a = list(map(int, input('Ведите количество ягод через пробел:').split()))

maxsum = 0

for i in range(n):
    cursum = sum(a[i:i + 3])
    if cursum > maxsum:
        maxsum = cursum
if a[0] + a[-1] + a[-2] > maxsum:
    maxsum = a[0] + a[-1] + a[-2]
if a[0] + a[1] + a[-1] > maxsum:
    maxsum = a[0] + a[1] + a[-1]

print(maxsum)"""

# 4

# Напишите программу, которая принимает на вход
# строку, и отслеживает, сколько раз каждый символ
# уже встречался. Количество повторов добавляется к
# символам с помощью постфикса формата _n.
# Input: d g h t r g r h t j h b v f d s d f
# Output: d g h t r g_2 r_2 h_2 t_2 j h_3 b v f d_2 s d_3 f_2

"""string = 'd g h t r g r h t j h b v f d s d f'
my_list = string.split()
my_dict = {}
new_list = []
for letter in my_list:
    my_dict[letter] = my_dict.get(letter, 0) + 1
    if my_dict.get(letter) > 1:
        new_list.append(letter + "_" + str(my_dict.get(letter)))
    else:
        new_list.append(letter)
print(" ".join(new_list))"""

# Пользователь вводит текст(строка). Словом считается
# последовательность непробельных символов идущих
# подряд, слова разделены одним или большим числом
# пробелов. Определите, сколько различных слов
# содержится в этом тексте.

"""text = input('введите текст: ')
text = text.split()
text = set(text)
print(f'В нашем тексте {len(text)} уникальных слова')"""

"""text = input('введите текст: ')
text = text.split()
new_list = []
count = 0
for word in text:
    if not word in new_list:
        new_list.append(word)
        count += 1
print(f'В нашем тексте {count} уникальных слова')"""

# Дана последовательность чисел. Получить список
# уникальных элементов заданной последовательности.

"""my_list = [1, 2, 3, 5, 1, 5, 3, 10]
new_list = []
for item in my_list:
    if my_list.count(item) == 1:
        new_list.append(item)
print(my_list)
print(f'Уникальные элементы {new_list}')"""

"""my_list = [1, 2, 3, 5, 1, 5, 3, 10]
print([letter for letter in my_list if my_list.count(letter) == 1])"""
